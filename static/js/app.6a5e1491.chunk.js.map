{"version":3,"sources":["src/services/api.ts","src/services/UserApi.ts","src/contexts/AuthContext.tsx","src/components/Body.tsx","src/components/Screen.tsx","src/screens/SignInScreen.tsx","src/components/CardSkeleton.tsx","src/components/CardListSkeleton.tsx","src/components/Header.tsx","src/utils/DateUtils.ts","src/utils/StringUtils.ts","src/components/RateioCard.tsx","src/services/RateioApi.ts","src/screens/HomeScreen.tsx","src/components/PessoaForm.tsx","src/screens/PessoaAlterar.tsx","src/screens/PessoaDetalheScreen.tsx","src/components/PessoaCard.tsx","src/services/AcertoApi.ts","src/screens/PessoasScreen.tsx","src/components/Loading.tsx","src/components/RateioDetalheItem.tsx","src/screens/RateioDetalheScreen.tsx","src/screens/admin-flow/AdminUsuarioCadastrarScreen.tsx","src/services/GithubApi.ts","src/screens/SobreScreen.tsx","src/utils/UsuarioUtils.ts","src/utils/RateioUtils.ts","src/contexts/RateioContext.tsx","src/screens/admin-flow/AdminUsuarioAlterarScreen.tsx","src/components/AdminUsuarioItem.tsx","src/screens/admin-flow/AdminUsuariosScreen.tsx","src/routes/admin.routes.tsx","src/screens/rateio-flow/RateioDescricaoScreen.tsx","src/components/RateioUsuarioItem.tsx","src/components/CurrencyInput.tsx","src/components/RateioUsuarioModal.tsx","src/screens/rateio-flow/RateioPessoasScreen.tsx","src/screens/rateio-flow/RateioValorScreen.tsx","src/routes/rateio.routes.tsx","src/routes/app.routes.tsx","src/routes/index.tsx","src/styles/theme.ts","src/components/StatusBar.tsx","App.tsx"],"names":["api","axios","create","headers","baseURL","timeout","defineToken","token","defaults","Authorization","email","senha","post","data","get","body","uuid","put","login","fetchMe","fetchAll","update","AuthContext","createContext","AuthContextProvider","children","toast","useToast","useState","usuario","setUsuario","isLoading","setLoading","isUserLogged","AsyncStorage","getItem","console","log","signIn","UserApi","setItem","error","show","title","placement","bgColor","useEffect","signInStorage","Provider","value","signOut","removeItem","useAuthContext","useContext","Body","Box","flex","w","base","lg","m","Screen","VStack","SignInScreen","setEmail","setSenha","Error","message","Center","px","alignItems","Text","fontSize","bold","color","FormControl","mb","Label","_text","Input","placeholder","keyboardType","autoCapitalize","onChangeText","isDisabled","type","Button","colorScheme","onPress","Skeleton","props","startColor","CardSkeleton","borderRadius","pt","pb","mx","HStack","justifyContent","size","rounded","lines","ml","mt","h","p","Avatar","Group","_avatar","borderWidth","CardListSkeleton","Array","from","length","map","_","index","Header","navigation","useNavigation","py","Heading","lineHeight","navigate","apelido","IconButton","icon","Icon","as","Feather","name","Alert","alert","text","timeSince","date","formatDistanceToNowStrict","locale","format","dataStr","fnsFormat","parseISO","formatBRL","undefined","toFixed","replace","RateioCard","usuarios","descricao","valorAPagar","valorTotal","dataCadastro","itsMe","TouchableOpacity","Head","StringUtils","Footer","d","source","uri","avatarUrl","mr","DateUtils","theme","useTheme","max","colors","violet","usuarioUuid","params","usuario_uuid","rateio","fetchFeed","fetchByUuid","fetchComentariosByUuid","createComentario","createRateio","HomeScreen","useQuery","RateioApi","rateios","isRefetching","refetch","FlatList","refreshing","onRefresh","renderItem","item","keyExtractor","Fab","renderInPortal","shadow","AntDesign","PessoaForm","isAlterar","onSubmit","rest","setUri","TextInput","label","leftElement","onEndEditing","e","nativeEvent","isRequired","helpText","handleSubmit","control","useFormContext","rules","required","render","field","onChange","onBlur","fieldState","isInvalid","variant","ErrorMessage","HelperText","PessoaAlterar","useMutation","onError","backgroundColor","onSuccess","mutate","methods","useForm","defaultValues","my","PessoaDetalheScreen","acerto","useRoute","isNegative","saldo","SafeAreaView","style","ScrollView","flexDirection","nome","r","PessoaCard","borderColor","numberOfLines","PessoasScreen","AcertoApi","useMemo","reduce","current","valorReceber","valorPagar","numColumns","margin","pr","FontAwesome5","ValorItem","Loading","bg","Spinner","RateioDetalheItem","valorUnitario","RateioDetalheScreen","isLoadingRateio","comentarios","isLoadingComentarios","isFetched","Title","comentario","RateioComentarioItem","ComentarioForm","rateioUUID","pl","selectable","queryClient","useQueryClient","setComentario","variables","context","invalidateQueries","TextArea","autoCompleteType","trim","AdminUsuarioCadastroScreen","reset","goBack","showsVerticalScrollIndicator","Accept","project","fetchCollabotators","SobreScreen","Promise","all","GithubApi","mobile","res","obj","forEach","id","Object","values","space","url","html_url","Linking","avatar_url","fontWeight","Constants","expoConfig","version","whiteList","isAdmin","includes","calcRateioResto","valoresRateio","faltaRatear","acc","curr","Number","calcValoresRateioNovo","valoresRateioValues","valorTotalEditado","usuarioSemEditarQtd","vr","editado","valorUnitarioNovo","valoresRateioNovo","filter","lastKey","keys","pop","lastRateio","RateioContext","RateioProvider","setValorTotal","setDescricao","setValoresRateio","valorUsuarioSelected","setValorUsuarioSelected","RateioUtils","isCreateRateioLoading","mutateAsync","addValorRateioUsuario","useCallback","valorEditado","valorRateioCurrent","removeValorRateioUsuario","valor","useRateioContext","useContextSelector","ctx","useRateio","selector","AdminUsuarioAlterarScreen","AdminUsuarioItem","AdminUsuariosScreen","createStackNavigator","Navigator","AdminRoutes","screenOptions","headerShown","component","AdminUsuarioCadastrarScreen","RaterioDescricaoScreen","descricaoTemp","setDescricaoTemp","autoFocus","RaterioUsuarioItem","ButtonValorMemo","memo","useValorRateio","hasSelected","setSelected","s","onLongPress","CurrencyInput","styles","StyleSheet","input","white","fontSizes","fontFamily","fonts","heading","options","prefix","decimalSeparator","groupSeparator","precision","RateioUsuarioModal","setValor","handleClose","Modal","isOpen","onClose","Content","CloseButton","defaultValue","rawText","RaterioPessoasScreen","valorTotalMemo","routes","PessoasListMemo","RaterioValorScreen","valorFinal","RateioRoutes","Tab","createBottomTabNavigator","AppRoutes","tabBarStyle","borderTopColor","indigo","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarIcon","focused","Ionicons","UsuarioUtils","MaterialIcons","tabBarButton","Routes","NavigationContainer","THEME","extendTheme","config","useSystemColorMode","initialColorMode","green","500","yellow","600","red","950","900","800","50","components","baseStyle","Divider","variants","filled","defaultProps","placeholderTextColor","_focus","StatusBar","barStyle","QueryClient","App","client","NativeBaseProvider","registerRootComponent"],"mappings":"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","file":"static/js/app.6a5e1491.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const api = axios.create({\r\n  headers: { \"Content-Type\": \"application/json\" },\r\n  baseURL: \"https://ratea-me.herokuapp.com\",\r\n  timeout: 1000 * 60, // 1 min\r\n});\r\n\r\nexport function defineToken(token: string) {\r\n  api.defaults.headers.Authorization = token;\r\n}\r\n","import { api } from \"./api\";\r\n\r\n/**\r\n *  Api\r\n *  Context\r\n *  Utils\r\n *  Screen\r\n */\r\n\r\nexport interface LoginRequest {\r\n  email: string;\r\n  senha: string;\r\n}\r\n\r\nexport interface IUsuarioCreate\r\n  extends Omit<IUsuario, \"uuid\" | \"dataCadastro\"> {}\r\n\r\nexport interface IUsuarioUpdate\r\n  extends Omit<IUsuario, \"email\" | \"dataCadastro\"> {}\r\n\r\nexport interface IUsuario {\r\n  uuid: string;\r\n  nome: string;\r\n  sobrenome: string;\r\n  email: string;\r\n  apelido: string;\r\n  avatarUrl: string;\r\n  dataCadastro: string;\r\n}\r\n\r\nexport interface IUsuarioValorSelected {\r\n  uuid: string;\r\n  avatarUrl: string;\r\n  nome: string;\r\n  apelido: string;\r\n  // valorUnitario: number;\r\n  editado?: boolean;\r\n}\r\n\r\nasync function login({ email, senha }: LoginRequest) {\r\n  const res = await api.post(\"/login\", { email, senha });\r\n  const { Authorization } = res.data;\r\n  return Authorization;\r\n}\r\n\r\nasync function fetchMe() {\r\n  const res = await api.get(`/usuario/me`);\r\n  const { data } = res;\r\n  return data as IUsuario;\r\n}\r\n\r\nasync function fetchAll() {\r\n  const res = await api.get(`/usuario`);\r\n  const { data } = res;\r\n  return data as IUsuario[];\r\n}\r\n\r\nasync function create(body: IUsuarioCreate) {\r\n  const res = await api.post(`/usuario`, body);\r\n  const { data } = res;\r\n\r\n  return data as IUsuario;\r\n}\r\nasync function update({ uuid, ...body }: IUsuarioUpdate) {\r\n  const res = await api.put(`/usuario/${uuid}`, body);\r\n  const { data } = res;\r\n\r\n  return data as IUsuario;\r\n}\r\n\r\nexport default {\r\n  login,\r\n  create,\r\n  fetchMe,\r\n  fetchAll,\r\n  update,\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useToast } from \"native-base\";\r\nimport { createContext, useContext, useState } from \"react\";\r\nimport { defineToken } from \"~/services/api\";\r\nimport UserApi, { IUsuario, LoginRequest } from \"~/services/UserApi\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\ninterface AuthContextData {\r\n  isUserLogged: boolean;\r\n  isLoading: boolean;\r\n  usuario: IUsuario;\r\n  signIn(params: LoginRequest): Promise<void>;\r\n  signOut(): void;\r\n}\r\n\r\nconst AuthContext = createContext({} as AuthContextData);\r\n\r\ninterface AuthContextProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport function AuthContextProvider({ children }: AuthContextProviderProps) {\r\n  const toast = useToast();\r\n\r\n  const [usuario, setUsuario] = useState({} as IUsuario);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const isUserLogged = !!usuario.uuid;\r\n\r\n  useEffect(() => {\r\n    signInStorage();\r\n  }, []);\r\n\r\n  async function signInStorage() {\r\n    const email = await AsyncStorage.getItem(\"@email\");\r\n    const senha = await AsyncStorage.getItem(\"@senha\");\r\n\r\n    if (!email && !senha) return;\r\n    console.log(\"signInStorage\");\r\n    await signIn({ email, senha });\r\n  }\r\n\r\n  async function signIn({ email, senha }: LoginRequest) {\r\n    try {\r\n      setLoading(true);\r\n      const Authorization = await UserApi.login({ email, senha });\r\n      defineToken(Authorization);\r\n\r\n      const usuario = await UserApi.fetchMe();\r\n      setUsuario(usuario);\r\n\r\n      AsyncStorage.setItem(\"@email\", email);\r\n      AsyncStorage.setItem(\"@senha\", senha);\r\n    } catch (error) {\r\n      console.log(\"[ERROR] signIn\", error);\r\n      toast.show({\r\n        title: \"Email e/ou senha inválido!\",\r\n        placement: \"top\",\r\n        bgColor: \"red.500\",\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function signOut() {\r\n    setUsuario({} as IUsuario);\r\n    AsyncStorage.removeItem(\"@email\");\r\n    AsyncStorage.removeItem(\"@senha\");\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isUserLogged,\r\n        isLoading,\r\n        usuario,\r\n        signIn,\r\n        signOut,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuthContext() {\r\n  const ctx = useContext(AuthContext);\r\n  return ctx;\r\n}\r\n","import { Box } from \"native-base\";\r\n\r\nexport function Body({ children }) {\r\n  return (\r\n    <Box flex={1} w={{ base: \"full\", lg: \"1/2\" }} m=\"auto\">\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, VStack } from \"native-base\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\nexport function Screen({ children }: Props) {\r\n  return (\r\n    <VStack flex={1} bgColor=\"indigo.950\">\r\n      {children}\r\n    </VStack>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  FormControl,\r\n  Input,\r\n  Text,\r\n  useToast,\r\n} from \"native-base\";\r\nimport { useState } from \"react\";\r\nimport { Body } from \"~/components/Body\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\n\r\nexport function SignInScreen() {\r\n  const toast = useToast();\r\n  const { signIn, isLoading } = useAuthContext();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [senha, setSenha] = useState(\"\");\r\n\r\n  async function handleSubmit() {\r\n    try {\r\n      if (!email) throw new Error(\"E-mail é obrigatório!\");\r\n      if (!senha) throw new Error(\"Senha é obrigatório!\");\r\n\r\n      await signIn({ email, senha });\r\n    } catch (error) {\r\n      toast.show({\r\n        title: error.message,\r\n        placement: \"top\",\r\n        bgColor: \"red.500\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <Center flex={1} px={4}>\r\n          <Box alignItems=\"center\">\r\n            <Text fontSize=\"4xl\" bold color=\"indigo.50\">\r\n              Ratea.me\r\n            </Text>\r\n            <Text color=\"indigo.50\">Gerencie dividas com seus amigos :D</Text>\r\n          </Box>\r\n\r\n          <FormControl mb={4}>\r\n            <FormControl.Label\r\n              _text={{\r\n                color: \"indigo.50\",\r\n              }}\r\n            >\r\n              E-mail\r\n            </FormControl.Label>\r\n            <Input\r\n              placeholder=\"Digite seu e-mail\"\r\n              keyboardType=\"email-address\"\r\n              autoCapitalize=\"none\"\r\n              color=\"indigo.50\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n              isDisabled={isLoading}\r\n            />\r\n          </FormControl>\r\n\r\n          <FormControl mb={8}>\r\n            <FormControl.Label\r\n              _text={{\r\n                color: \"indigo.50\",\r\n              }}\r\n            >\r\n              Senha\r\n            </FormControl.Label>\r\n            <Input\r\n              placeholder=\"Digite sua senha\"\r\n              type=\"password\"\r\n              color=\"indigo.50\"\r\n              value={senha}\r\n              onChangeText={setSenha}\r\n              isDisabled={isLoading}\r\n            />\r\n          </FormControl>\r\n\r\n          <Button\r\n            colorScheme=\"violet\"\r\n            w=\"full\"\r\n            onPress={handleSubmit}\r\n            isLoading={isLoading}\r\n          >\r\n            Entrar\r\n          </Button>\r\n        </Center>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import { Avatar, HStack, Skeleton as NBSkeleton, VStack } from \"native-base\";\r\n\r\nconst Skeleton = (props) => <NBSkeleton startColor=\"violet.900\" {...props} />;\r\nSkeleton.Text = (props) => (\r\n  <NBSkeleton.Text startColor=\"violet.900\" {...props} />\r\n);\r\n\r\nexport function CardSkeleton() {\r\n  return (\r\n    <VStack\r\n      bgColor=\"indigo.900\"\r\n      borderRadius=\"lg\"\r\n      px={1}\r\n      pt={2}\r\n      pb={1}\r\n      mb={3}\r\n      mx={2}\r\n    >\r\n      <HStack alignItems=\"center\" justifyContent=\"space-between\">\r\n        <HStack alignItems=\"center\">\r\n          <Skeleton size={10} rounded=\"full\" />\r\n          <Skeleton.Text lines={1} w={32} ml={2} />\r\n        </HStack>\r\n        <Skeleton.Text lines={1} w={12} ml={2} />\r\n      </HStack>\r\n      <VStack mt={2}>\r\n        <Skeleton.Text lines={1} w={24} ml={2} />\r\n        <Skeleton w={20} h={6} rounded=\"lg\" ml={2} mt={2} />\r\n      </VStack>\r\n      <HStack\r\n        bgColor=\"indigo.800\"\r\n        borderRadius=\"md\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        p={1}\r\n        mt={2}\r\n      >\r\n        <Avatar.Group\r\n          px={5}\r\n          _avatar={{\r\n            size: \"xs\",\r\n            borderWidth: 0,\r\n          }}\r\n        >\r\n          <Skeleton size={6} rounded=\"full\" />\r\n          <Skeleton size={6} rounded=\"full\" />\r\n          <Skeleton size={6} rounded=\"full\" />\r\n        </Avatar.Group>\r\n        <Skeleton.Text lines={1} w={8} ml={2} />\r\n      </HStack>\r\n    </VStack>\r\n  );\r\n}\r\n","import { CardSkeleton } from \"./CardSkeleton\";\r\n\r\nexport function CardListSkeleton() {\r\n  return (\r\n    <>\r\n      {Array.from({ length: 7 }).map((_, index) => (\r\n        <CardSkeleton key={index} />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { Alert } from \"react-native\";\r\nimport {\r\n  Avatar,\r\n  Heading,\r\n  HStack,\r\n  Icon,\r\n  IconButton,\r\n  Text,\r\n  useTheme,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nexport function Header() {\r\n  const { usuario, signOut } = useAuthContext();\r\n  const navigation = useNavigation();\r\n\r\n  function handleSignOut() {\r\n    Alert.alert(\"Certeza que deseja sair?\", \"\", [\r\n      { text: \"Não\" },\r\n      {\r\n        text: \"Sim\",\r\n        onPress: signOut,\r\n      },\r\n    ]);\r\n  }\r\n  return (\r\n    <HStack\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      bgColor=\"violet.800\"\r\n      px={3}\r\n      py={3}\r\n    >\r\n      <Heading color=\"indigo.50\" bold fontSize=\"2xl\">\r\n        Ratea.me\r\n      </Heading>\r\n\r\n      {/* <Avatar source={{ uri: usuario.avatarUrl }} size=\"sm\" /> */}\r\n\r\n      <VStack ml={2}>\r\n        <Text color=\"indigo.50\" lineHeight=\"xs\">\r\n          Olá\r\n        </Text>\r\n        <HStack alignItems=\"center\">\r\n          <Text\r\n            color=\"indigo.50\"\r\n            fontSize=\"lg\"\r\n            bold\r\n            lineHeight=\"xs\"\r\n            onPress={() => navigation.navigate(\"pessoa-alterar\")}\r\n          >\r\n            @{usuario.apelido}\r\n          </Text>\r\n          <IconButton\r\n            icon={\r\n              <Icon as={Feather} name=\"log-out\" color=\"violet.200\" size=\"md\" />\r\n            }\r\n            onPress={handleSignOut}\r\n            ml={2}\r\n            size=\"xs\"\r\n          />\r\n        </HStack>\r\n      </VStack>\r\n    </HStack>\r\n  );\r\n}\r\n","import {\r\n  addHours,\r\n  format as fnsFormat,\r\n  formatDistanceToNowStrict,\r\n  parseISO,\r\n} from \"date-fns\";\r\nimport locale from \"date-fns/locale/pt-BR\";\r\n\r\nfunction timeSince(date: Date) {\r\n  return formatDistanceToNowStrict(date, { locale });\r\n}\r\n\r\nfunction format(dataStr: string) {\r\n  return fnsFormat(parseISO(dataStr), \"dd/MM/yyyy hh:mm\", {\r\n    locale,\r\n  });\r\n}\r\n\r\nexport default { timeSince, format };\r\n","function formatBRL(value: number) {\r\n  if (value === null || value === undefined) return \"\";\r\n  return `R$ ${value\r\n    .toFixed(2)\r\n    .replace(\".\", \",\")\r\n    .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\")}`;\r\n}\r\n\r\nexport default {\r\n  formatBRL,\r\n};\r\n","import Feather from \"@expo/vector-icons/Feather\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  HStack,\r\n  ITextProps,\r\n  Text as NBText,\r\n  useTheme,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { TouchableOpacity } from \"react-native\";\r\n\r\nimport { parseISO } from \"date-fns\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport { IRateio, IUsuarioRateio } from \"~/services/RateioApi\";\r\nimport DateUtils from \"~/utils/DateUtils\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\ninterface Props {\r\n  data: IRateio;\r\n}\r\n\r\nexport function RateioCard({\r\n  data: {\r\n    uuid,\r\n    usuario,\r\n    usuarios,\r\n    descricao,\r\n    valorAPagar,\r\n    valorTotal,\r\n    dataCadastro,\r\n  },\r\n}: Props) {\r\n  const navigation = useNavigation();\r\n  const { usuario: usuarioLogado } = useAuthContext();\r\n  const itsMe = usuarioLogado.uuid === usuario.uuid;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => navigation.navigate(\"rateio-detalhe\", { uuid })}\r\n    >\r\n      <VStack\r\n        bgColor=\"indigo.900\"\r\n        borderRadius=\"lg\"\r\n        px={1}\r\n        pt={2}\r\n        pb={1}\r\n        mb={3}\r\n      >\r\n        <Head usuario={usuario} dataCadastro={dataCadastro} itsMe={itsMe} />\r\n        <Box px={2} mb={2}>\r\n          <Text>{descricao}</Text>\r\n          <Text bold fontSize=\"xl\">\r\n            {StringUtils.formatBRL(itsMe ? valorTotal : valorAPagar)}\r\n          </Text>\r\n          {!itsMe && (\r\n            <Text color=\"violet.200\">{StringUtils.formatBRL(valorTotal)}</Text>\r\n          )}\r\n        </Box>\r\n        <Footer usuarios={usuarios} />\r\n      </VStack>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\ninterface HeadProps {\r\n  usuario: IUsuarioRateio;\r\n  dataCadastro: string;\r\n  itsMe: boolean;\r\n}\r\nfunction Head({ usuario, dataCadastro, itsMe }: HeadProps) {\r\n  let d = parseISO(dataCadastro);\r\n  return (\r\n    <HStack alignItems=\"center\" justifyContent=\"space-between\" px={2} mb={2}>\r\n      <HStack alignItems=\"center\">\r\n        <Avatar source={{ uri: usuario.avatarUrl }} size=\"sm\" mr={2} />\r\n        {itsMe ? (\r\n          <Text>Você criou um rateio</Text>\r\n        ) : (\r\n          <Text>\r\n            <Text bold>@{usuario.apelido}</Text> colocou você em um rateio\r\n          </Text>\r\n        )}\r\n      </HStack>\r\n      <NBText color=\"violet.200\">{DateUtils.timeSince(d)}</NBText>\r\n    </HStack>\r\n  );\r\n}\r\n\r\nfunction Footer({ usuarios }) {\r\n  const theme = useTheme();\r\n  return (\r\n    <HStack\r\n      bgColor=\"indigo.800\"\r\n      borderRadius=\"md\"\r\n      justifyContent=\"space-between\"\r\n      p={1}\r\n    >\r\n      <Avatar.Group\r\n        max={3}\r\n        _avatar={{\r\n          size: \"xs\",\r\n          borderWidth: 0,\r\n        }}\r\n        px={5}\r\n      >\r\n        {usuarios.map((usuario, index) => (\r\n          <Avatar\r\n            key={usuario.uuid + index}\r\n            source={{ uri: usuario.avatarUrl }}\r\n            mr={1}\r\n          />\r\n        ))}\r\n      </Avatar.Group>\r\n      <Feather\r\n        name=\"message-circle\"\r\n        size={24}\r\n        color={theme.colors.violet[200]}\r\n      />\r\n    </HStack>\r\n  );\r\n}\r\n\r\nfunction Text(props: ITextProps) {\r\n  return <NBText color=\"indigo.50\" {...props} />;\r\n}\r\n","import { api } from \"./api\";\r\n\r\nexport interface IUsuarioRateio {\r\n  uuid: string;\r\n  apelido: string;\r\n  avatarUrl: string;\r\n}\r\n\r\nexport interface IRateio {\r\n  uuid: string;\r\n  descricao: string;\r\n  dataCadastro: string;\r\n  valorAPagar: number;\r\n  valorTotal: number;\r\n  usuario: IUsuarioRateio;\r\n  usuarios: IUsuarioRateio[];\r\n}\r\n\r\nexport interface IRateioUsuario {\r\n  uuid: string;\r\n  nome: string;\r\n  apelido: string;\r\n  valorUnitario: number;\r\n}\r\n\r\nexport interface IRateioDetalhe {\r\n  uuid: string;\r\n  descricao: string;\r\n  data: string;\r\n  valorTotal: number;\r\n  usuarios: IRateioUsuario[];\r\n}\r\n\r\nexport interface IRateioComentario {\r\n  uuid: string;\r\n  descricao: string;\r\n  dataCadastro: string;\r\n  usuario: {\r\n    uuid: string;\r\n    apelido: string;\r\n    avatarUrl: string;\r\n  };\r\n}\r\n\r\nexport interface IValorRateioUsuario {\r\n  uuid: string;\r\n  valorUnitario: number;\r\n}\r\n\r\nexport interface IRateioCreate {\r\n  descricao: string;\r\n  observacao?: string;\r\n  valor: number;\r\n  usuarios: IValorRateioUsuario[];\r\n}\r\n\r\nasync function fetchFeed(usuarioUuid?: string) {\r\n  const res = await api.get(`/rateio/feed`, {\r\n    params: {\r\n      usuario_uuid: usuarioUuid,\r\n    },\r\n  });\r\n  return res.data as IRateio[];\r\n}\r\n\r\nasync function fetchByUuid(uuid: string) {\r\n  const res = await api.get(`/rateio/${uuid}`);\r\n  return res.data as IRateioDetalhe;\r\n}\r\n\r\nasync function fetchComentariosByUuid(uuid: string) {\r\n  const res = await api.get(`/rateio/${uuid}/comentario`);\r\n  return res.data as IRateioComentario[];\r\n}\r\n\r\nasync function createComentario(uuid: string, descricao: string) {\r\n  const res = await api.post(`/rateio/${uuid}/comentario`, { descricao });\r\n  return res.data as IRateioComentario;\r\n}\r\n\r\nasync function createRateio(rateio: IRateioCreate) {\r\n  const res = await api.post(`/rateio`, rateio);\r\n  return res.data as IRateio[];\r\n}\r\n\r\nexport default {\r\n  fetchFeed,\r\n  fetchByUuid,\r\n  fetchComentariosByUuid,\r\n  createComentario,\r\n  createRateio,\r\n};\r\n","import AntDesign from \"@expo/vector-icons/AntDesign\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Box, Center, Fab, FlatList, Icon, TextArea } from \"native-base\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Body } from \"~/components/Body\";\r\nimport { CardListSkeleton } from \"~/components/CardListSkeleton\";\r\nimport { CardSkeleton } from \"~/components/CardSkeleton\";\r\nimport { Header } from \"~/components/Header\";\r\nimport { Loading } from \"~/components/Loading\";\r\nimport { RateioCard } from \"~/components/RateioCard\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport RateioApi from \"~/services/RateioApi\";\r\n\r\nexport function HomeScreen() {\r\n  const navigation = useNavigation();\r\n  const {\r\n    data: rateios,\r\n    isLoading,\r\n    isRefetching,\r\n\r\n    refetch,\r\n  } = useQuery(\"rateios\", () => RateioApi.fetchFeed());\r\n\r\n  return (\r\n    <Screen>\r\n      <Header />\r\n      <Body>\r\n        {isLoading && <CardListSkeleton />}\r\n        {rateios && (\r\n          <FlatList\r\n            data={rateios}\r\n            refreshing={isRefetching}\r\n            onRefresh={refetch}\r\n            renderItem={({ item }) => <RateioCard data={item} />}\r\n            keyExtractor={(item, index) => item.uuid}\r\n            // _contentContainerStyle={{ pb: 10 }} // nao funcionou ver depois\r\n            px={3}\r\n          />\r\n        )}\r\n        <Fab\r\n          renderInPortal={false}\r\n          shadow={2}\r\n          size=\"sm\"\r\n          colorScheme=\"violet\"\r\n          icon={<Icon color=\"white\" as={AntDesign} name=\"plus\" size=\"sm\" />}\r\n          onPress={() => navigation.navigate(\"rateio\")}\r\n        />\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  FormControl,\r\n  HStack,\r\n  IInputProps,\r\n  Input,\r\n} from \"native-base\";\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  UseFormReturn,\r\n} from \"react-hook-form\";\r\n\r\ninterface PessoaFormProps extends UseFormReturn<any> {\r\n  isAlterar?: boolean;\r\n  isLoading?: boolean;\r\n  onSubmit?: (data: any) => void;\r\n}\r\nexport function PessoaForm({\r\n  isAlterar,\r\n  isLoading,\r\n  onSubmit,\r\n  ...rest\r\n}: PessoaFormProps) {\r\n  const [uri, setUri] = useState<string>();\r\n\r\n  return (\r\n    <FormProvider {...rest}>\r\n      <TextInput name=\"nome\" label=\"Nome\" placeholder=\"John\" />\r\n      <TextInput name=\"sobrenome\" label=\"Sobrenome\" placeholder=\"Doe\" />\r\n\r\n      <TextInput\r\n        name=\"apelido\"\r\n        label=\"Apelido\"\r\n        placeholder=\"johndoe\"\r\n        autoCapitalize=\"none\"\r\n      />\r\n      <TextInput\r\n        name=\"avatarUrl\"\r\n        label=\"Avatar URL\"\r\n        placeholder=\"https://niceimg.com/johndoe.png\"\r\n        leftElement={<Avatar size=\"sm\" ml={2} source={{ uri }} />}\r\n        onEndEditing={(e) => {\r\n          setUri(e.nativeEvent.text);\r\n        }}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        placeholder=\"john.doe@gmail.com\"\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n        isDisabled={isAlterar}\r\n      />\r\n\r\n      <TextInput\r\n        name=\"senha\"\r\n        type=\"password\"\r\n        label=\"Senha\"\r\n        placeholder=\"*******\"\r\n        isRequired={!isAlterar}\r\n        helpText=\"Caso não deseja alterar a senha basta nao preencher o campo.\"\r\n      />\r\n      <Button\r\n        mt={4}\r\n        colorScheme=\"violet\"\r\n        w=\"full\"\r\n        onPress={rest.handleSubmit(onSubmit)}\r\n        isLoading={isLoading}\r\n      >\r\n        Salvar\r\n      </Button>\r\n    </FormProvider>\r\n  );\r\n}\r\n\r\ninterface Props extends IInputProps {\r\n  name: string;\r\n  label: string;\r\n  helpText?: string;\r\n}\r\nfunction TextInput({\r\n  name,\r\n  label,\r\n  helpText,\r\n  isRequired = true,\r\n  ...rest\r\n}: Props) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      rules={{\r\n        required: isRequired ? \"Este campo é obrigatório!\" : false,\r\n      }}\r\n      render={({\r\n        field: { onChange, onBlur, value },\r\n        fieldState: { error },\r\n      }) => (\r\n        <FormControl mb={4} isInvalid={!!error}>\r\n          <FormControl.Label\r\n            isRequired={isRequired}\r\n            _text={{\r\n              color: \"indigo.50\",\r\n            }}\r\n          >\r\n            {label}\r\n          </FormControl.Label>\r\n          <Input\r\n            color=\"indigo.50\"\r\n            variant=\"filled\"\r\n            onBlur={onBlur}\r\n            onChangeText={onChange}\r\n            value={value}\r\n            isRequired={isRequired}\r\n            {...rest}\r\n          />\r\n          {error && (\r\n            <FormControl.ErrorMessage>{error.message}</FormControl.ErrorMessage>\r\n          )}\r\n          {helpText && (\r\n            <FormControl.HelperText>{helpText}</FormControl.HelperText>\r\n          )}\r\n        </FormControl>\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { Heading, useToast, VStack } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"react-query\";\r\nimport { Header } from \"~/components/Header\";\r\nimport { PessoaForm } from \"~/components/PessoaForm\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport UserApi from \"~/services/UserApi\";\r\n\r\nexport function PessoaAlterar() {\r\n  const { usuario } = useAuthContext();\r\n\r\n  const toast = useToast();\r\n\r\n  const { mutate, isLoading } = useMutation(UserApi.update, {\r\n    onError: (error) => {\r\n      toast.show({\r\n        title: error as string,\r\n        backgroundColor: \"red.500\",\r\n      });\r\n    },\r\n    onSuccess: () => {\r\n      toast.show({\r\n        title: \"Pessoa alterada com sucesso!\",\r\n        backgroundColor: \"green.500\",\r\n      });\r\n    },\r\n  });\r\n\r\n  const methods = useForm({\r\n    defaultValues: usuario,\r\n  });\r\n\r\n  return (\r\n    <Screen>\r\n      <VStack my={2} px={4} flex={1}>\r\n        <Heading mt={4} mb={8}>\r\n          Pessoa alterar\r\n        </Heading>\r\n        <PessoaForm\r\n          isAlterar\r\n          onSubmit={mutate}\r\n          isLoading={isLoading}\r\n          {...methods}\r\n        />\r\n      </VStack>\r\n    </Screen>\r\n  );\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\n\r\nimport {\r\n  Avatar,\r\n  Center,\r\n  Divider,\r\n  HStack,\r\n  ScrollView,\r\n  Text,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport { IAcertoItem } from \"~/services/AcertoApi\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\nimport RateioApi from \"~/services/RateioApi\";\r\nimport { Loading } from \"~/components/Loading\";\r\nimport { SafeAreaView } from \"react-native\";\r\nimport { RateioCard } from \"~/components/RateioCard\";\r\nimport { CardListSkeleton } from \"~/components/CardListSkeleton\";\r\n\r\ninterface PessoaDetalheParams {\r\n  acerto: IAcertoItem;\r\n}\r\n\r\nexport function PessoaDetalheScreen() {\r\n  const { usuario } = useAuthContext();\r\n  const route = useRoute();\r\n  const { acerto } = route.params as PessoaDetalheParams;\r\n\r\n  const { isLoading, data: rateios } = useQuery(\r\n    `pessoa-detalhe-${acerto.uuid}`,\r\n    () => RateioApi.fetchFeed(acerto.uuid)\r\n  );\r\n\r\n  const isNegative = acerto.saldo < 0;\r\n  return (\r\n    <Screen>\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        <ScrollView flex={1}>\r\n          <Center py={8}>\r\n            <HStack flexDirection=\"row-reverse\">\r\n              <Avatar source={{ uri: usuario.avatarUrl }} size=\"xl\" ml={-4} />\r\n              <Avatar source={{ uri: acerto.avatarUrl }} size=\"xl\" />\r\n            </HStack>\r\n            <Text color=\"white\" fontSize=\"2xl\">\r\n              {acerto.nome}\r\n            </Text>\r\n            <Text color=\"violet.200\">@{acerto.apelido}</Text>\r\n            <Text\r\n              color={isNegative ? \"red.400\" : \"green.400\"}\r\n              fontSize=\"2xl\"\r\n              bold\r\n            >\r\n              {StringUtils.formatBRL(acerto.saldo)}\r\n            </Text>\r\n          </Center>\r\n          {/* <Divider bgColor=\"indigo.900\" mb={4} /> */}\r\n          {isLoading ? (\r\n            // <Loading />\r\n            <CardListSkeleton />\r\n          ) : (\r\n            <VStack px={2}>\r\n              {rateios.map((r) => (\r\n                <RateioCard key={r.uuid} data={r} />\r\n              ))}\r\n            </VStack>\r\n          )}\r\n        </ScrollView>\r\n      </SafeAreaView>\r\n    </Screen>\r\n  );\r\n}\r\n","import { Avatar, Box, Center, Text } from \"native-base\";\r\nimport { IAcertoItem } from \"~/services/AcertoApi\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\r\n\r\ninterface Props {\r\n  acerto: IAcertoItem;\r\n}\r\nexport function PessoaCard({\r\n  acerto,\r\n  acerto: { uuid, avatarUrl, apelido, nome, saldo },\r\n}: Props) {\r\n  const navigation = useNavigation();\r\n\r\n  const isNegative = saldo < 0;\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => navigation.navigate(\"pessoa-detalhe\", { acerto })}\r\n    >\r\n      <Center\r\n        bgColor=\"indigo.900\"\r\n        borderColor=\"indigo.800\"\r\n        borderWidth={1}\r\n        borderRadius=\"lg\"\r\n        p={2}\r\n        flex={1}\r\n      >\r\n        <Avatar source={{ uri: avatarUrl }} size=\"lg\" />\r\n        <Center flex={1} mb={1}>\r\n          <Text color=\"white\" fontSize=\"lg\" numberOfLines={1}>\r\n            {nome}\r\n          </Text>\r\n          <Text color=\"violet.200\" numberOfLines={1}>\r\n            @{apelido}\r\n          </Text>\r\n        </Center>\r\n        <Text color={isNegative ? \"red.400\" : \"green.400\"} fontSize=\"xl\" bold>\r\n          {StringUtils.formatBRL(saldo)}\r\n        </Text>\r\n      </Center>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import { api } from \"./api\";\r\n\r\nexport interface IAcertoItem {\r\n  uuid: string;\r\n  nome: string;\r\n  avatarUrl: string;\r\n  apelido: string;\r\n  valorReceber: number;\r\n  valorPagar: number;\r\n  saldo: number;\r\n}\r\n\r\nasync function fetch() {\r\n  const res = await api.get(`/acerto`);\r\n  const { data } = res;\r\n  return data as IAcertoItem[];\r\n}\r\n\r\nexport default {\r\n  fetch,\r\n};\r\n","import FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Box, FlatList, HStack, Text, useTheme } from \"native-base\";\r\nimport { useMemo } from \"react\";\r\nimport { SafeAreaView } from \"react-native\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Body } from \"~/components/Body\";\r\nimport { PessoaCard } from \"~/components/PessoaCard\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport AcertoApi from \"~/services/AcertoApi\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\n\r\nconst NUM_COLUMNS = 3;\r\n\r\nexport function PessoasScreen() {\r\n  const navigation = useNavigation();\r\n  const { data, isLoading, refetch } = useQuery(\"acertos\", AcertoApi.fetch);\r\n\r\n  const { valorReceber, valorPagar } = useMemo(() => {\r\n    if (!data) return { valorPagar: 0, valorReceber: 0 };\r\n\r\n    return data\r\n      .map((d) => d.saldo)\r\n      .reduce(\r\n        ({ valorReceber, valorPagar }, current) => {\r\n          valorReceber += current > 0 ? current : 0;\r\n          valorPagar += current < 0 ? current : 0;\r\n\r\n          return { valorReceber, valorPagar };\r\n        },\r\n        { valorReceber: 0, valorPagar: 0 }\r\n      );\r\n  }, [data]);\r\n\r\n  return (\r\n    <Screen>\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        <Header valorPagar={valorPagar} valorReceber={valorReceber} />\r\n        <Body>\r\n          <FlatList\r\n            data={data}\r\n            onRefresh={refetch}\r\n            refreshing={isLoading}\r\n            numColumns={NUM_COLUMNS}\r\n            renderItem={({ item, index }) => (\r\n              <Box flex={1} m={1} mt={index < NUM_COLUMNS ? 4 : 1}>\r\n                <PessoaCard acerto={item} />\r\n              </Box>\r\n            )}\r\n            keyExtractor={(item) => item.uuid}\r\n          />\r\n        </Body>\r\n      </SafeAreaView>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nfunction Header({ valorPagar, valorReceber }) {\r\n  const theme = useTheme();\r\n  const navigation = useNavigation();\r\n  return (\r\n    <Box bgColor=\"violet.900\">\r\n      <HStack\r\n        alignItems=\"center\"\r\n        px={8}\r\n        py={2}\r\n        w={{ base: \"full\", lg: \"1/2\" }}\r\n        margin=\"auto\"\r\n      >\r\n        <Box pr={6}>\r\n          <FontAwesome5\r\n            name=\"comments-dollar\"\r\n            size={90}\r\n            color={theme.colors.violet[200]}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          <ValorItem label=\"A pagar\" value={valorPagar} />\r\n          <ValorItem label=\"A receber\" value={valorReceber} />\r\n        </Box>\r\n      </HStack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction ValorItem({ label, value }) {\r\n  const isNegative = value < 0;\r\n  return (\r\n    <Box>\r\n      <Text color=\"violet.200\">{label}</Text>\r\n      <Text color={isNegative ? \"red.400\" : \"green.400\"} fontSize=\"3xl\" bold>\r\n        {StringUtils.formatBRL(value)}\r\n      </Text>\r\n    </Box>\r\n  );\r\n}\r\n","import { Center, Spinner } from \"native-base\";\r\n\r\nexport function Loading() {\r\n  return (\r\n    <Center flex={1} bg=\"indigo.950\">\r\n      <Spinner color=\"purple.500\" />\r\n    </Center>\r\n  );\r\n}\r\n","import { HStack, Text, VStack } from \"native-base\";\r\nimport { IRateioUsuario } from \"~/services/RateioApi\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\n\r\ninterface RateioDetalheItemProps {\r\n  usuario: IRateioUsuario;\r\n}\r\n\r\nexport function RateioDetalheItem({ usuario }: RateioDetalheItemProps) {\r\n  return (\r\n    <HStack\r\n      bgColor=\"indigo.900\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      borderRadius=\"md\"\r\n      p={2}\r\n      mb={2}\r\n    >\r\n      <VStack>\r\n        <Text color=\"white\">{usuario.nome}</Text>\r\n        <Text color=\"violet.200\">@{usuario.apelido}</Text>\r\n      </VStack>\r\n      <Text color=\"white\">{StringUtils.formatBRL(usuario.valorUnitario)}</Text>\r\n    </HStack>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { parseISO } from \"date-fns\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  KeyboardAvoidingView,\r\n  ScrollView,\r\n  Text,\r\n  TextArea,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\r\nimport { Loading } from \"~/components/Loading\";\r\nimport { RateioDetalheItem } from \"~/components/RateioDetalheItem\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport RateioApi, { IRateioComentario } from \"~/services/RateioApi\";\r\nimport DateUtils from \"~/utils/DateUtils\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\n\r\ninterface RateioDetalheParams {\r\n  uuid: string;\r\n}\r\n\r\nexport function RateioDetalheScreen() {\r\n  const route = useRoute();\r\n  const { uuid } = route.params as RateioDetalheParams;\r\n\r\n  const { data: rateio, isLoading: isLoadingRateio } = useQuery(\r\n    [\"rateio\", { uuid }],\r\n    () => RateioApi.fetchByUuid(uuid)\r\n  );\r\n\r\n  const {\r\n    data: comentarios,\r\n    isLoading: isLoadingComentarios,\r\n    isFetched,\r\n  } = useQuery([\"rateio-comentarios\", { uuid }], () =>\r\n    RateioApi.fetchComentariosByUuid(uuid)\r\n  );\r\n\r\n  if (isLoadingRateio || isLoadingComentarios) return <Loading />;\r\n  return (\r\n    <Screen>\r\n      <ScrollView>\r\n        <Center bgColor=\"violet.900\" py={8} mb={3}>\r\n          <Text color=\"violet.200\">{DateUtils.format(rateio.data)}</Text>\r\n          <Text color=\"white\" fontSize=\"lg\">\r\n            {rateio.descricao}\r\n          </Text>\r\n          <Text color=\"violet.200\" fontSize=\"2xl\" bold>\r\n            {StringUtils.formatBRL(rateio.valorTotal)}\r\n          </Text>\r\n        </Center>\r\n        {/* <KeyboardAvoidingView behavior=\"position\"> */}\r\n        <VStack p={2}>\r\n          <Title label=\"Participantes\" />\r\n          {rateio.usuarios.map((usuario, index) => (\r\n            <RateioDetalheItem key={usuario.uuid + index} usuario={usuario} />\r\n          ))}\r\n        </VStack>\r\n        <VStack p={2}>\r\n          <Title label=\"Comentários\" />\r\n\r\n          {isFetched && comentarios.length == 0 && (\r\n            <Box>\r\n              <Text color=\"violet.200\">👀 Sem comentários ainda...</Text>\r\n            </Box>\r\n          )}\r\n          {comentarios.map((comentario) => (\r\n            <RateioComentarioItem\r\n              key={comentario.uuid}\r\n              comentario={comentario}\r\n            />\r\n          ))}\r\n        </VStack>\r\n        <ComentarioForm rateioUUID={uuid} />\r\n        {/* </KeyboardAvoidingView> */}\r\n      </ScrollView>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nexport function Title({ label }) {\r\n  return (\r\n    <Text color=\"white\" fontSize=\"xl\" bold mb={3}>\r\n      {label}\r\n    </Text>\r\n  );\r\n}\r\n\r\ninterface RateioComentarioProps {\r\n  comentario: IRateioComentario;\r\n}\r\nexport function RateioComentarioItem({\r\n  comentario,\r\n  comentario: { usuario },\r\n}: RateioComentarioProps) {\r\n  return (\r\n    <HStack bgColor=\"indigo.900\" p={2} mb={2} borderRadius=\"md\">\r\n      <Avatar source={{ uri: usuario.avatarUrl }} size=\"sm\" />\r\n      <VStack pl={2} flex={1}>\r\n        <HStack justifyContent=\"space-between\">\r\n          <Text color=\"violet.200\">@{usuario.apelido}</Text>\r\n          <Text color=\"violet.200\">\r\n            {DateUtils.timeSince(parseISO(comentario.dataCadastro))}\r\n          </Text>\r\n        </HStack>\r\n        <Text color=\"white\" selectable>\r\n          {comentario.descricao}\r\n        </Text>\r\n      </VStack>\r\n    </HStack>\r\n  );\r\n}\r\n\r\ninterface ComentarioFormProps {\r\n  rateioUUID: string;\r\n}\r\nexport function ComentarioForm({ rateioUUID }: ComentarioFormProps) {\r\n  const queryClient = useQueryClient();\r\n  const [comentario, setComentario] = useState(\"\");\r\n\r\n  const { isLoading, mutate } = useMutation(\r\n    (comentario: string) => RateioApi.createComentario(rateioUUID, comentario),\r\n    {\r\n      onSuccess: (data, variables, context) => {\r\n        /**\r\n         *  TODO: Aqui pode na verdade refazer a query de comentarios\r\n         *  pq nesse caso tenho todos os obj visuais para renderizar um\r\n         *  node de comentario\r\n         */\r\n        queryClient.invalidateQueries([\r\n          \"rateio-comentarios\",\r\n          { uuid: rateioUUID },\r\n        ]);\r\n\r\n        setComentario(\"\");\r\n      },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <TextArea\r\n        autoCompleteType=\"\"\r\n        variant=\"filled\"\r\n        placeholder=\"Digite um comentário...\"\r\n        isDisabled={isLoading}\r\n        value={comentario}\r\n        isRequired\r\n        size=\"md\"\r\n        onChangeText={setComentario}\r\n      />\r\n      <Button\r\n        bgColor=\"violet.900\"\r\n        isLoading={isLoading}\r\n        isDisabled={!comentario.trim()}\r\n        onPress={() => mutate(comentario)}\r\n        mt={2}\r\n      >\r\n        Comentar\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n","import { useForm } from \"react-hook-form\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { Heading, ScrollView, useToast, VStack } from \"native-base\";\r\nimport { useMutation } from \"react-query\";\r\nimport { PessoaForm } from \"~/components/PessoaForm\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport UserApi from \"~/services/UserApi\";\r\nimport { Body } from \"~/components/Body\";\r\n\r\nexport function AdminUsuarioCadastroScreen() {\r\n  const navigation = useNavigation();\r\n  const toast = useToast();\r\n\r\n  const methods = useForm();\r\n  const { isLoading, mutate } = useMutation(UserApi.create, {\r\n    onError: (error) => {\r\n      toast.show({\r\n        title: error as string,\r\n        backgroundColor: \"red.500\",\r\n        placement: \"top\",\r\n      });\r\n    },\r\n    onSuccess: () => {\r\n      methods.reset();\r\n      toast.show({\r\n        title: \"Pessoa cadastrada com sucesso!\",\r\n        backgroundColor: \"green.500\",\r\n        placement: \"top\",\r\n      });\r\n\r\n      navigation.goBack();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <VStack my={2} px={4} flex={1}>\r\n          <ScrollView showsVerticalScrollIndicator={false}>\r\n            <Heading mt={4} mb={8}>\r\n              Novo Cadastro\r\n            </Heading>\r\n            <PessoaForm onSubmit={mutate} isLoading={isLoading} {...methods} />\r\n          </ScrollView>\r\n        </VStack>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst api = axios.create({\r\n  baseURL: \"https://api.github.com\",\r\n  headers: {\r\n    Accept: \"application/vnd.github+json\",\r\n    \"X-GitHub-Api-Version\": \"2022-11-28\",\r\n    // Authorization: \"token <TOKEN>\",\r\n  },\r\n});\r\n\r\nexport interface IContributors {\r\n  id: number;\r\n  login: string;\r\n  avatar_url: string;\r\n  html_url: string;\r\n  contributions: number;\r\n}\r\n\r\nasync function fetchContributors(project: string) {\r\n  const res = await api.get(`/repos/localhost-io/${project}/contributors`);\r\n  const contributors = res.data;\r\n  return contributors as IContributors[];\r\n}\r\n\r\nexport default {\r\n  fetchCollabotators: fetchContributors,\r\n};\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Center,\r\n  FlatList,\r\n  Heading,\r\n  HStack,\r\n  Text,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { TouchableOpacity } from \"react-native\";\r\nimport { useQuery } from \"react-query\";\r\nimport { Loading } from \"~/components/Loading\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport GithubApi, { IContributors } from \"~/services/GithubApi\";\r\nimport * as Linking from \"expo-linking\";\r\nimport Constants from \"expo-constants\";\r\n\r\nexport function SobreScreen() {\r\n  const { isLoading, data } = useQuery(\"collabotators\", async () => {\r\n    const [api, mobile] = await Promise.all([\r\n      GithubApi.fetchCollabotators(\"ratea-me\"),\r\n      GithubApi.fetchCollabotators(\"rateame-mobile\"),\r\n    ]);\r\n\r\n    let res = [...api, ...mobile];\r\n\r\n    const obj = {};\r\n    res.forEach((r) => (obj[r.id] = r));\r\n    const resFinal = Object.values(obj);\r\n\r\n    return resFinal as IContributors[];\r\n  });\r\n\r\n  if (isLoading) return <Loading />;\r\n\r\n  function handlePress(url: string) {\r\n    Linking.openURL(url);\r\n  }\r\n  return (\r\n    <Screen>\r\n      <Center flex={1}>\r\n        <HStack space={2} alignItems=\"center\" mb={4}>\r\n          <Heading>Contribuidores</Heading>\r\n          <Center bgColor=\"indigo.400\" w={5} h={5} rounded=\"sm\">\r\n            <Text fontSize=\"xs\">{data?.length}</Text>\r\n          </Center>\r\n        </HStack>\r\n        <Box>\r\n          {data?.map((item) => (\r\n            <TouchableOpacity\r\n              key={item.id}\r\n              onPress={() => handlePress(item.html_url)}\r\n            >\r\n              <HStack mb={2} space={2} alignItems=\"center\">\r\n                <Avatar source={{ uri: item.avatar_url }} size=\"sm\" />\r\n                <Text fontSize=\"md\" fontWeight=\"bold\">\r\n                  {item.login}\r\n                </Text>\r\n              </HStack>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </Box>\r\n      </Center>\r\n      <Box alignItems=\"center\">\r\n        <TouchableOpacity\r\n          onPress={() => Linking.openURL(\"https://github.com/localhost-io\")}\r\n        >\r\n          <Text fontSize=\"lg\">\r\n            Powered by <Text fontWeight=\"bold\">Localhost</Text>\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <Text>V{Constants.expoConfig.version}</Text>\r\n      </Box>\r\n    </Screen>\r\n  );\r\n}\r\n","const whiteList = [\r\n  \"deivid@gmail.com\",\r\n  \"sarah@gmail.com\",\r\n  \"priscilaassis@gmail.com\",\r\n];\r\n\r\nfunction isAdmin(email: string) {\r\n  return whiteList.includes(email);\r\n}\r\n\r\nexport default {\r\n  isAdmin,\r\n};\r\n","import { ValoresRateioUsuario } from \"~/contexts/RateioContext\";\r\n\r\nfunction calcValoresRateioNovo(\r\n  valorTotal: number,\r\n  valoresRateio: ValoresRateioUsuario\r\n) {\r\n  // mantem quem ta com valor editado\r\n  const valoresRateioValues = Object.values(valoresRateio);\r\n  let valorTotalEditado = 0;\r\n  let usuarioSemEditarQtd = 0;\r\n\r\n  valoresRateioValues.forEach((vr) => {\r\n    if (vr.editado) {\r\n      valorTotalEditado += vr.valorUnitario;\r\n    } else {\r\n      usuarioSemEditarQtd++;\r\n    }\r\n  });\r\n\r\n  const valorTotalRestante = valorTotal - valorTotalEditado;\r\n\r\n  let valorUnitarioNovo = valorTotalRestante / usuarioSemEditarQtd;\r\n\r\n  if (valorUnitarioNovo)\r\n    valorUnitarioNovo = Number(valorUnitarioNovo.toFixed(2));\r\n\r\n  // pega valor e divide em partes iguais (contando com o usuario corrente)\r\n  const valoresRateioNovo = { ...valoresRateio };\r\n\r\n  valoresRateioValues\r\n    .filter((vr) => !vr.editado)\r\n    .forEach((vr) => {\r\n      if (vr.editado) return;\r\n\r\n      valoresRateioNovo[vr.uuid] = {\r\n        uuid: vr.uuid,\r\n        valorUnitario: valorUnitarioNovo,\r\n      };\r\n    });\r\n\r\n  // se sobrar valor joga a diferenca para o ultimo\r\n  const faltaRatear = calcRateioResto(valorTotal, valoresRateioNovo);\r\n  if (faltaRatear < 0.05 && faltaRatear > -0.05) {\r\n    const lastKey = Object.keys(valoresRateioNovo).pop();\r\n    const lastRateio = valoresRateioNovo[lastKey];\r\n    valoresRateioNovo[lastKey].valorUnitario =\r\n      lastRateio.valorUnitario + faltaRatear;\r\n  }\r\n\r\n  return valoresRateioNovo;\r\n}\r\n\r\nfunction calcRateioResto(\r\n  valorTotal: number,\r\n  valoresRateio: ValoresRateioUsuario\r\n) {\r\n  const valorRateadoTotal = Object.values(valoresRateio).reduce(\r\n    (acc, curr) => acc + curr.valorUnitario,\r\n    0\r\n  );\r\n\r\n  let faltaRatear = valorTotal - valorRateadoTotal;\r\n  if (faltaRatear) faltaRatear = Number(faltaRatear.toFixed(2));\r\n  return faltaRatear;\r\n}\r\n\r\nexport default {\r\n  calcValoresRateioNovo,\r\n  calcRateioResto,\r\n};\r\n","import { ReactNode, useCallback, useMemo, useState } from \"react\";\r\nimport { useMutation } from \"react-query\";\r\n\r\nimport { createContext, useContextSelector } from \"use-context-selector\";\r\nimport RateioApi from \"~/services/RateioApi\";\r\nimport RateioUtils from \"~/utils/RateioUtils\";\r\n\r\ninterface RateioContextData {\r\n  valorTotal: number;\r\n  setValorTotal: (valorTotal: number) => void;\r\n  //\r\n  descricao: string;\r\n  setDescricao: (descricao: string) => void;\r\n  //\r\n  valoresRateio: ValoresRateioUsuario;\r\n  addValorRateioUsuario: (uuid: string, valor?: number) => void;\r\n  removeValorRateioUsuario: (uuid: string) => void;\r\n  //\r\n  valorUsuarioSelected?: ValoresRateioUsuarioData;\r\n  setValorUsuarioSelected: (\r\n    valorUsuarioSelected?: ValoresRateioUsuarioData\r\n  ) => void;\r\n  //\r\n  faltaRatear: number;\r\n  createRateio: () => Promise<boolean>;\r\n  isCreateRateioLoading: boolean;\r\n}\r\n\r\nexport interface ValoresRateioUsuarioData {\r\n  uuid: string;\r\n  valorUnitario: number;\r\n  editado?: boolean;\r\n}\r\n\r\nexport interface ValoresRateioUsuario {\r\n  [uuid: string]: ValoresRateioUsuarioData;\r\n}\r\n\r\ninterface RateioProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst RateioContext = createContext({} as RateioContextData);\r\n\r\nexport function RateioProvider({ children }: RateioProviderProps) {\r\n  const [valorTotal, setValorTotal] = useState(0);\r\n  const [descricao, setDescricao] = useState(\"\");\r\n\r\n  const [valoresRateio, setValoresRateio] = useState<ValoresRateioUsuario>({});\r\n  const [valorUsuarioSelected, setValorUsuarioSelected] =\r\n    useState<ValoresRateioUsuarioData>();\r\n\r\n  const faltaRatear = useMemo(\r\n    () => RateioUtils.calcRateioResto(valorTotal, valoresRateio),\r\n    [valorTotal, valoresRateio]\r\n  );\r\n\r\n  const { isLoading: isCreateRateioLoading, mutateAsync } = useMutation(\r\n    RateioApi.createRateio,\r\n    {\r\n      onError: (e) => {\r\n        console.log(\"ddddd\", e);\r\n      },\r\n    }\r\n  );\r\n\r\n  const addValorRateioUsuario = useCallback(\r\n    (uuid: string, valorEditado?: number) => {\r\n      setValoresRateio((valoresRateio) => {\r\n        const valorRateioCurrent = {\r\n          uuid,\r\n          valorUnitario: valorEditado ?? valorTotal,\r\n          editado: !!valorEditado,\r\n        };\r\n\r\n        valoresRateio[uuid] = valorRateioCurrent;\r\n\r\n        if (Object.keys(valoresRateio).length === 1) {\r\n          return valoresRateio;\r\n        }\r\n\r\n        // atualiza o meu valor rateio\r\n        const valoresRateioNovo = RateioUtils.calcValoresRateioNovo(\r\n          valorTotal,\r\n          valoresRateio\r\n        );\r\n\r\n        return valoresRateioNovo;\r\n      });\r\n    },\r\n    [valorTotal]\r\n  );\r\n\r\n  const removeValorRateioUsuario = useCallback(\r\n    (uuid: string) => {\r\n      setValoresRateio((valoresRateio) => {\r\n        delete valoresRateio[uuid];\r\n\r\n        if (Object.keys(valoresRateio).length == 0) {\r\n          return valoresRateio;\r\n        }\r\n\r\n        const valoresRateioNovo = RateioUtils.calcValoresRateioNovo(\r\n          valorTotal,\r\n          valoresRateio\r\n        );\r\n        return valoresRateioNovo;\r\n      });\r\n    },\r\n    [valorTotal]\r\n  );\r\n\r\n  const createRateio = useCallback(async () => {\r\n    const usuarios = Object.values(valoresRateio).map((vr) => ({\r\n      uuid: vr.uuid,\r\n      valorUnitario: vr.valorUnitario,\r\n    }));\r\n\r\n    try {\r\n      await mutateAsync({\r\n        descricao,\r\n        valor: valorTotal,\r\n        usuarios,\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }, [valorTotal, descricao, valoresRateio]);\r\n\r\n  return (\r\n    <RateioContext.Provider\r\n      value={{\r\n        valorTotal,\r\n        setValorTotal,\r\n        descricao,\r\n        setDescricao,\r\n        valoresRateio,\r\n        addValorRateioUsuario,\r\n        removeValorRateioUsuario,\r\n        valorUsuarioSelected,\r\n        setValorUsuarioSelected,\r\n        faltaRatear,\r\n        createRateio,\r\n        isCreateRateioLoading,\r\n      }}\r\n    >\r\n      {children}\r\n    </RateioContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useRateioContext() {\r\n  return useContextSelector(RateioContext, (ctx) => ctx);\r\n}\r\n\r\nexport function useRateio(selector: (ctx: RateioContextData) => any) {\r\n  return useContextSelector(RateioContext, selector);\r\n}\r\n\r\nexport function useValorRateio(uuid: string) {\r\n  const valorRateio = useRateio((ctx) => ctx.valoresRateio?.[uuid]);\r\n\r\n  return valorRateio || {};\r\n}\r\n","import { useNavigation, useRoute } from \"@react-navigation/native\";\r\nimport { Heading, useToast, VStack } from \"native-base\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"react-query\";\r\nimport { Body } from \"~/components/Body\";\r\nimport { Header } from \"~/components/Header\";\r\nimport { PessoaForm } from \"~/components/PessoaForm\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport UserApi, { IUsuario } from \"~/services/UserApi\";\r\n\r\nexport function AdminUsuarioAlterarScreen() {\r\n  const navigation = useNavigation();\r\n  const { params } = useRoute();\r\n\r\n  const { usuario } =\r\n    params as ReactNavigation.RootParamList[\"admin-usuario-alterar\"];\r\n  const toast = useToast();\r\n\r\n  const { mutate, isLoading } = useMutation(UserApi.update, {\r\n    onError: (error) => {\r\n      toast.show({\r\n        title: error as string,\r\n        backgroundColor: \"red.500\",\r\n        placement: \"top\",\r\n      });\r\n    },\r\n    onSuccess: () => {\r\n      toast.show({\r\n        title: \"Pessoa alterada com sucesso!\",\r\n        backgroundColor: \"green.500\",\r\n        placement: \"top\",\r\n      });\r\n\r\n      navigation.goBack();\r\n    },\r\n  });\r\n\r\n  const methods = useForm({\r\n    defaultValues: usuario,\r\n  });\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <VStack my={2} px={4} flex={1}>\r\n          <Heading mt={4} mb={8}>\r\n            Pessoa alterar\r\n          </Heading>\r\n\r\n          <PessoaForm\r\n            isAlterar\r\n            onSubmit={mutate}\r\n            isLoading={isLoading}\r\n            {...methods}\r\n          />\r\n        </VStack>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import { TouchableOpacity, TouchableOpacityProps } from \"react-native\";\r\nimport { Avatar, Box, HStack, Text } from \"native-base\";\r\nimport { IUsuarioValorSelected } from \"~/services/UserApi\";\r\ninterface Props extends TouchableOpacityProps {\r\n  usuario: IUsuarioValorSelected;\r\n}\r\nexport function AdminUsuarioItem({ usuario, ...rest }: Props) {\r\n  return (\r\n    <TouchableOpacity {...rest}>\r\n      <HStack\r\n        bgColor=\"indigo.900\"\r\n        justifyContent=\"space-between\"\r\n        rounded=\"md\"\r\n        px={2}\r\n        py={1}\r\n        mb={2}\r\n      >\r\n        <HStack>\r\n          <Avatar source={{ uri: usuario.avatarUrl }} size=\"sm\" />\r\n          <Box ml={2}>\r\n            <Text>{usuario.nome}</Text>\r\n            <Text color=\"violet.200\" fontSize=\"xs\">\r\n              @{usuario.apelido}\r\n            </Text>\r\n          </Box>\r\n        </HStack>\r\n      </HStack>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport { Fab, FlatList, Heading, Icon, VStack } from \"native-base\";\r\nimport { useQuery } from \"react-query\";\r\nimport { AdminUsuarioItem } from \"~/components/AdminUsuarioItem\";\r\nimport { RaterioUsuarioItem } from \"~/components/RateioUsuarioItem\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport UserApi from \"~/services/UserApi\";\r\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\r\nimport { Body } from \"~/components/Body\";\r\n\r\nexport function AdminUsuariosScreen() {\r\n  const navigation = useNavigation();\r\n  const { data: usuarios, isLoading } = useQuery(\"usuarios\", UserApi.fetchAll);\r\n\r\n  return (\r\n    <Screen>\r\n      <VStack px={2} flex={1}>\r\n        <Heading mt={4} mb={8}>\r\n          Area administrativa\r\n        </Heading>\r\n        <Body>\r\n          <FlatList\r\n            data={usuarios}\r\n            renderItem={({ item }) => (\r\n              <AdminUsuarioItem\r\n                usuario={item}\r\n                onPress={() =>\r\n                  navigation.navigate(\"admin-usuario-alterar\", {\r\n                    usuario: item,\r\n                  })\r\n                }\r\n              />\r\n            )}\r\n            keyExtractor={(item) => item.uuid}\r\n            // _contentContainerStyle={{ mb: 8 }} // nao funcionou ver depois\r\n          />\r\n          <Fab\r\n            renderInPortal={false}\r\n            shadow={2}\r\n            size=\"sm\"\r\n            colorScheme=\"violet\"\r\n            icon={<Icon color=\"white\" as={AntDesign} name=\"plus\" size=\"sm\" />}\r\n            onPress={() => navigation.navigate(\"admin-usuario-cadastrar\")}\r\n          />\r\n        </Body>\r\n      </VStack>\r\n    </Screen>\r\n  );\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { RateioProvider } from \"~/contexts/RateioContext\";\r\nimport { AdminUsuarioAlterarScreen } from \"~/screens/admin-flow/AdminUsuarioAlterarScreen\";\r\nimport { AdminUsuarioCadastroScreen as AdminUsuarioCadastrarScreen } from \"~/screens/admin-flow/AdminUsuarioCadastrarScreen\";\r\nimport { AdminUsuariosScreen } from \"~/screens/admin-flow/AdminUsuariosScreen\";\r\n\r\nconst { Navigator, Screen } = createStackNavigator();\r\n\r\nexport function AdminRoutes() {\r\n  return (\r\n    <RateioProvider>\r\n      <Navigator screenOptions={{ headerShown: false }}>\r\n        <Screen name=\"admin-usuarios\" component={AdminUsuariosScreen} />\r\n        <Screen\r\n          name=\"admin-usuario-alterar\"\r\n          component={AdminUsuarioAlterarScreen}\r\n        />\r\n        <Screen\r\n          name=\"admin-usuario-cadastrar\"\r\n          component={AdminUsuarioCadastrarScreen}\r\n        />\r\n      </Navigator>\r\n    </RateioProvider>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Heading,\r\n  HStack,\r\n  Input,\r\n  Text,\r\n  TextArea,\r\n  useToast,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useRateioContext } from \"~/contexts/RateioContext\";\r\nimport { Body } from \"~/components/Body\";\r\n\r\nexport function RaterioDescricaoScreen() {\r\n  const navigation = useNavigation();\r\n  const toast = useToast();\r\n\r\n  const { setDescricao } = useRateioContext();\r\n  const [descricaoTemp, setDescricaoTemp] = useState(\"\");\r\n\r\n  function handleNext() {\r\n    if (descricaoTemp.trim().length < 5) {\r\n      return toast.show({\r\n        title: \"Pare de preguiça e informa uma descrição descente!\",\r\n        bgColor: \"red.500\",\r\n        placement: \"top\",\r\n      });\r\n    }\r\n\r\n    setDescricao(descricaoTemp);\r\n    navigation.navigate(\"pessoas\");\r\n  }\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <VStack px={4} mt={12} flex={1}>\r\n          <Heading>Esse rateio e sobre oque?</Heading>\r\n          <Text>Descreva um pouco sobre o rateio.</Text>\r\n          <Box flex={1}>\r\n            <TextArea\r\n              value={descricaoTemp}\r\n              onChangeText={setDescricaoTemp}\r\n              fontSize=\"lg\"\r\n              autoCompleteType\r\n              placeholder=\"ex: pizza para a gelera\"\r\n              mt={3}\r\n              variant=\"filled\"\r\n              autoFocus\r\n            />\r\n          </Box>\r\n        </VStack>\r\n        <HStack p={2} space={4}>\r\n          <Button\r\n            variant=\"subtle\"\r\n            colorScheme=\"violet\"\r\n            flex={1}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            Voltar\r\n          </Button>\r\n          <Button colorScheme=\"violet\" w=\"full\" flex={1} onPress={handleNext}>\r\n            Próximo\r\n          </Button>\r\n        </HStack>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import { useState, memo, useEffect } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Center,\r\n  HStack,\r\n  IconButton,\r\n  Text,\r\n} from \"native-base\";\r\nimport { IUsuarioValorSelected } from \"~/services/UserApi\";\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport {\r\n  useRateio,\r\n  useRateioContext,\r\n  useValorRateio,\r\n} from \"~/contexts/RateioContext\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\ninterface Props {\r\n  usuario: IUsuarioValorSelected;\r\n}\r\nexport function RaterioUsuarioItem({ usuario }: Props) {\r\n  return (\r\n    <HStack\r\n      bgColor=\"indigo.900\"\r\n      justifyContent=\"space-between\"\r\n      rounded=\"md\"\r\n      px={2}\r\n      py={1}\r\n      mb={2}\r\n    >\r\n      <HStack>\r\n        <Avatar source={{ uri: usuario.avatarUrl }} size=\"sm\" />\r\n        <Box ml={2}>\r\n          <Text>{usuario.nome}</Text>\r\n          <Text color=\"violet.200\" fontSize=\"xs\">\r\n            @{usuario.apelido}\r\n          </Text>\r\n        </Box>\r\n      </HStack>\r\n\r\n      <ButtonValorMemo uuid={usuario.uuid} />\r\n    </HStack>\r\n  );\r\n}\r\n\r\nfunction ButtonValor({ uuid }) {\r\n  const addValorRateioUsuario = useRateio((ctx) => ctx.addValorRateioUsuario);\r\n  const removeValorRateioUsuario = useRateio(\r\n    (ctx) => ctx.removeValorRateioUsuario\r\n  );\r\n  const setValorUsuarioSelected = useRateio(\r\n    (ctx) => ctx.setValorUsuarioSelected\r\n  );\r\n\r\n  const { valorUnitario, editado } = useValorRateio(uuid);\r\n  const [hasSelected, setSelected] = useState(!!valorUnitario);\r\n\r\n  function toggle() {\r\n    setSelected((s) => {\r\n      const hasSelected = !s;\r\n\r\n      if (hasSelected) {\r\n        addValorRateioUsuario(uuid);\r\n      } else {\r\n        removeValorRateioUsuario(uuid);\r\n      }\r\n      return hasSelected;\r\n    });\r\n  }\r\n\r\n  function handleEdit() {\r\n    setValorUsuarioSelected({ uuid, valorUnitario: valorUnitario ?? 0 });\r\n    if (!hasSelected) setSelected(true);\r\n  }\r\n  return (\r\n    <Button\r\n      variant={hasSelected ? \"subtle\" : \"solid\"}\r\n      onPress={toggle}\r\n      onLongPress={handleEdit}\r\n      _text={{\r\n        fontWeight: editado ? 800 : 500,\r\n      }}\r\n      colorScheme=\"violet\"\r\n    >\r\n      {hasSelected ? StringUtils.formatBRL(valorUnitario) : \"Adicionar\"}\r\n    </Button>\r\n  );\r\n}\r\n\r\nconst ButtonValorMemo = memo(ButtonValor);\r\n","import { useTheme } from \"native-base\";\r\nimport { StyleSheet, TextInputProps } from \"react-native\";\r\n\r\nimport { MaskedTextInput, MaskedTextInputProps } from \"react-native-mask-text\";\r\n\r\ninterface Props extends MaskedTextInputProps {}\r\n\r\nexport function CurrencyInput(props: Props) {\r\n  const theme = useTheme();\r\n  const styles = StyleSheet.create({\r\n    input: {\r\n      color: theme.colors.white,\r\n      fontSize: theme.fontSizes[\"7xl\"],\r\n      fontWeight: \"700\",\r\n      fontFamily: theme.fonts.heading,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MaskedTextInput\r\n      type=\"currency\"\r\n      keyboardType=\"numeric\"\r\n      autoFocus\r\n      options={{\r\n        prefix: \"R$\",\r\n        decimalSeparator: \",\",\r\n        groupSeparator: \".\",\r\n        precision: 2,\r\n      }}\r\n      style={styles.input}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Avatar, Button, Center, Heading, Modal } from \"native-base\";\r\nimport { useRateio, useRateioContext } from \"~/contexts/RateioContext\";\r\nimport { CurrencyInput } from \"./CurrencyInput\";\r\n\r\nexport function RateioUsuarioModal() {\r\n  const valorUsuarioSelected = useRateio((ctx) => ctx.valorUsuarioSelected);\r\n  const addValorRateioUsuario = useRateio((ctx) => ctx.addValorRateioUsuario);\r\n  const setValorUsuarioSelected = useRateio(\r\n    (ctx) => ctx.setValorUsuarioSelected\r\n  );\r\n\r\n  const [valor, setValor] = useState(0);\r\n\r\n  if (!valorUsuarioSelected) return <></>;\r\n\r\n  function handleClose() {\r\n    setValorUsuarioSelected(undefined);\r\n  }\r\n\r\n  function handleConfirm() {\r\n    addValorRateioUsuario(valorUsuarioSelected.uuid, valor / 100);\r\n    handleClose();\r\n  }\r\n  return (\r\n    <Modal isOpen onClose={handleClose}>\r\n      <Modal.Content>\r\n        <Modal.CloseButton />\r\n        <Modal.Header>\r\n          <Center>\r\n            <Avatar\r\n              source={{ uri: \"https://github.com/deividfrancis.png\" }}\r\n              size=\"xl\"\r\n            />\r\n            <Heading>@pantufa</Heading>\r\n          </Center>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <CurrencyInput\r\n            // value={String(valor)}\r\n            defaultValue={valorUsuarioSelected.valorUnitario * 100 + \"\"}\r\n            onChangeText={(text, rawText) => {\r\n              setValor(Number(rawText));\r\n            }}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button.Group space={2}>\r\n            <Button variant=\"ghost\" colorScheme=\"red\" onPress={handleClose}>\r\n              Fechar\r\n            </Button>\r\n            <Button colorScheme=\"violet\" onPress={handleConfirm}>\r\n              Salvar\r\n            </Button>\r\n          </Button.Group>\r\n        </Modal.Footer>\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n}\r\n","import { useMemo, memo } from \"react\";\r\nimport { FlatList } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Heading,\r\n  HStack,\r\n  Input,\r\n  Text,\r\n  TextArea,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { useQuery } from \"react-query\";\r\nimport { RaterioUsuarioItem } from \"~/components/RateioUsuarioItem\";\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useRateio, useRateioContext } from \"~/contexts/RateioContext\";\r\nimport UserApi, { IUsuarioValorSelected } from \"~/services/UserApi\";\r\nimport StringUtils from \"~/utils/StringUtils\";\r\nimport { Loading } from \"~/components/Loading\";\r\nimport { RateioUsuarioModal } from \"~/components/RateioUsuarioModal\";\r\nimport { Body } from \"~/components/Body\";\r\n\r\nexport function RaterioPessoasScreen() {\r\n  const navigation = useNavigation();\r\n  const valorTotal = useRateio((ctx) => ctx.valorTotal);\r\n  const faltaRatear = useRateio((ctx) => ctx.faltaRatear);\r\n  const isCreateRateioLoading = useRateio((ctx) => ctx.isCreateRateioLoading);\r\n  const createRateio = useRateio((ctx) => ctx.createRateio);\r\n\r\n  const valorTotalMemo = useMemo(\r\n    () => StringUtils.formatBRL(valorTotal),\r\n    [valorTotal]\r\n  );\r\n\r\n  async function handleSubmit() {\r\n    const isOk = await createRateio();\r\n    if (isOk) navigation.reset({ index: 0, routes: [{ name: \"home\" }] });\r\n  }\r\n\r\n  if (isCreateRateioLoading) return <Loading />;\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <RateioUsuarioModal />\r\n        <VStack px={3} mt={12} flex={1}>\r\n          <Heading>Quantas pessoas fazem parte desse rateio?</Heading>\r\n          <Text>Valor do reteio é de {valorTotalMemo}</Text>\r\n          <Text>Falta ratear {StringUtils.formatBRL(faltaRatear)}</Text>\r\n          <Input\r\n            placeholder=\"Pesquisar pessoa...\"\r\n            mt={4}\r\n            colorScheme=\"violet\"\r\n          />\r\n\r\n          <Box flex={1} mt={3}>\r\n            <PessoasListMemo />\r\n          </Box>\r\n        </VStack>\r\n        <HStack p={2} space={4}>\r\n          <Button\r\n            variant=\"subtle\"\r\n            colorScheme=\"violet\"\r\n            flex={1}\r\n            onPress={() => navigation.goBack()}\r\n          >\r\n            Voltar\r\n          </Button>\r\n          <Button colorScheme=\"violet\" w=\"full\" flex={1} onPress={handleSubmit}>\r\n            Concluir\r\n          </Button>\r\n        </HStack>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n\r\nfunction PessoasList() {\r\n  const { data: usuarios, isLoading } = useQuery(\"usuarios\", UserApi.fetchAll);\r\n\r\n  if (isLoading) return <Loading />;\r\n  return (\r\n    <>\r\n      <FlatList\r\n        data={usuarios}\r\n        renderItem={({ item }) => <RaterioUsuarioItem usuario={item} />}\r\n        keyExtractor={(item) => item.uuid}\r\n        // _contentContainerStyle={{ mb: 8 }} // nao funcionou ver depois\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst PessoasListMemo = memo(PessoasList);\r\n","import { useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Heading,\r\n  HStack,\r\n  Text,\r\n  useToast,\r\n  VStack,\r\n} from \"native-base\";\r\nimport { CurrencyInput } from \"~/components/CurrencyInput\";\r\n\r\nimport { Screen } from \"~/components/Screen\";\r\nimport { useRateioContext } from \"~/contexts/RateioContext\";\r\nimport { Body } from \"~/components/Body\";\r\n\r\nexport function RaterioValorScreen() {\r\n  const navigation = useNavigation();\r\n  const toast = useToast();\r\n  const { setValorTotal } = useRateioContext();\r\n\r\n  const [valor, setValor] = useState(\"\");\r\n\r\n  function handleNext() {\r\n    const valorFinal = Number(valor);\r\n    if (!valorFinal) {\r\n      return toast.show({\r\n        title: \"Informe um valor para o rateio antes de continuar!\",\r\n        bgColor: \"red.500\",\r\n        placement: \"top\",\r\n      });\r\n    }\r\n\r\n    setValorTotal(valorFinal / 100);\r\n    navigation.navigate(\"descricao\");\r\n  }\r\n\r\n  return (\r\n    <Screen>\r\n      <Body>\r\n        <VStack px={4} mt={12} flex={1}>\r\n          <Heading>Qual o valor do{\"\\n\"}rateio?</Heading>\r\n          <Text>Informe o valor em R$ do rateio</Text>\r\n          <Box flex={1}>\r\n            {/* <Input\r\n            value=\"R$ 0,00\"\r\n            mt={3}\r\n            borderWidth={0}\r\n            color=\"white\"\r\n            fontSize=\"7xl\"\r\n            fontWeight={600}\r\n            focusable\r\n            keyboardType=\"decimal-pad\"\r\n          /> */}\r\n            <CurrencyInput\r\n              value={valor}\r\n              onChangeText={(text, rawText) => {\r\n                setValor(rawText);\r\n              }}\r\n            />\r\n          </Box>\r\n        </VStack>\r\n        <HStack p={2} space={4}>\r\n          <Button\r\n            variant=\"subtle\"\r\n            colorScheme=\"violet\"\r\n            flex={1}\r\n            onPress={navigation.goBack}\r\n          >\r\n            Cancelar\r\n          </Button>\r\n          <Button colorScheme=\"violet\" w=\"full\" flex={1} onPress={handleNext}>\r\n            Próximo\r\n          </Button>\r\n        </HStack>\r\n      </Body>\r\n    </Screen>\r\n  );\r\n}\r\n","import { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { RateioProvider } from \"~/contexts/RateioContext\";\r\nimport { RaterioDescricaoScreen } from \"~/screens/rateio-flow/RateioDescricaoScreen\";\r\nimport { RaterioPessoasScreen } from \"~/screens/rateio-flow/RateioPessoasScreen\";\r\nimport { RaterioValorScreen } from \"~/screens/rateio-flow/RateioValorScreen\";\r\n\r\nconst { Navigator, Screen } = createStackNavigator();\r\n\r\nexport function RateioRoutes() {\r\n  return (\r\n    <RateioProvider>\r\n      <Navigator screenOptions={{ headerShown: false }}>\r\n        <Screen name=\"valor\" component={RaterioValorScreen} />\r\n        <Screen name=\"descricao\" component={RaterioDescricaoScreen} />\r\n        <Screen name=\"pessoas\" component={RaterioPessoasScreen} />\r\n      </Navigator>\r\n    </RateioProvider>\r\n  );\r\n}\r\n","import { Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { useTheme } from \"native-base\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport { HomeScreen } from \"~/screens/HomeScreen\";\r\nimport { PessoaAlterar } from \"~/screens/PessoaAlterar\";\r\nimport { PessoaDetalheScreen } from \"~/screens/PessoaDetalheScreen\";\r\nimport { PessoasScreen } from \"~/screens/PessoasScreen\";\r\nimport { RateioDetalheScreen } from \"~/screens/RateioDetalheScreen\";\r\nimport { AdminUsuarioCadastroScreen } from \"~/screens/admin-flow/AdminUsuarioCadastrarScreen\";\r\nimport { SobreScreen } from \"~/screens/SobreScreen\";\r\nimport UsuarioUtils from \"~/utils/UsuarioUtils\";\r\nimport { AdminRoutes } from \"./admin.routes\";\r\nimport { RateioRoutes } from \"./rateio.routes\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport function AppRoutes() {\r\n  const { colors } = useTheme();\r\n  const { usuario } = useAuthContext();\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: {\r\n          borderTopColor: colors.indigo[800],\r\n          backgroundColor: colors.indigo[900],\r\n        },\r\n        tabBarActiveTintColor: colors.violet[500],\r\n        tabBarInactiveTintColor: colors.violet[300],\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"home\"\r\n        component={HomeScreen}\r\n        options={{\r\n          title: \"Home\",\r\n          tabBarIcon: ({ color, size, focused }) => (\r\n            <Ionicons\r\n              name={focused ? \"home\" : \"home-outline\"}\r\n              size={size}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"pessoas\"\r\n        component={PessoasScreen}\r\n        options={{\r\n          title: \"Pessoas\",\r\n          tabBarIcon: ({ color, size, focused }) => (\r\n            <Ionicons\r\n              name={focused ? \"people\" : \"people-outline\"}\r\n              size={size}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"sobre\"\r\n        options={{\r\n          title: \"Sobre\",\r\n          tabBarIcon: ({ color, size, focused }) => (\r\n            <Ionicons\r\n              name={focused ? \"information\" : \"information-outline\"}\r\n              size={size}\r\n              color={color}\r\n            />\r\n          ),\r\n        }}\r\n        component={SobreScreen}\r\n      />\r\n\r\n      {UsuarioUtils.isAdmin(usuario.email) && (\r\n        <Tab.Screen\r\n          name=\"admin\"\r\n          options={{\r\n            title: \"Admin\",\r\n            tabBarIcon: ({ color, size, focused }) => (\r\n              <MaterialIcons\r\n                name=\"admin-panel-settings\"\r\n                size={size}\r\n                color={color}\r\n              />\r\n            ),\r\n          }}\r\n          component={AdminRoutes}\r\n        />\r\n      )}\r\n\r\n      <Tab.Screen\r\n        name=\"rateio\"\r\n        component={RateioRoutes}\r\n        options={{ tabBarButton: () => null }}\r\n      />\r\n\r\n      <Tab.Screen\r\n        name=\"pessoa-detalhe\"\r\n        component={PessoaDetalheScreen}\r\n        options={{ tabBarButton: () => null }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"rateio-detalhe\"\r\n        component={RateioDetalheScreen}\r\n        options={{ tabBarButton: () => null }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"signup\"\r\n        component={AdminUsuarioCadastroScreen}\r\n        options={{ tabBarButton: () => null }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"pessoa-alterar\"\r\n        component={PessoaAlterar}\r\n        options={{ tabBarButton: () => null }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n","import { NavigationContainer } from \"@react-navigation/native\";\r\nimport { Box, Text } from \"native-base\";\r\nimport { useAuthContext } from \"~/contexts/AuthContext\";\r\nimport { SignInScreen } from \"~/screens/SignInScreen\";\r\nimport { AppRoutes } from \"./app.routes\";\r\n\r\nexport function Routes() {\r\n  const { isUserLogged } = useAuthContext();\r\n\r\n  return (\r\n    <Box flex={1} bgColor=\"indigo.950\">\r\n      <NavigationContainer>\r\n        {isUserLogged ? <AppRoutes /> : <SignInScreen />}\r\n      </NavigationContainer>\r\n    </Box>\r\n  );\r\n}\r\n","import { extendTheme } from \"native-base\";\r\n\r\nexport const THEME = extendTheme({\r\n  config: {\r\n    useSystemColorMode: false,\r\n    initialColorMode: \"dark\",\r\n  },\r\n  colors: {\r\n    // gray: {\r\n    //   950: \"#09090A\",\r\n    //   900: \"#121214\",\r\n    //   800: \"#202024\",\r\n    //   600: \"#323238\",\r\n    //   300: \"#8D8D99\",\r\n    //   200: \"#C4C4CC\",\r\n    // },\r\n    green: {\r\n      500: \"#047C3F\",\r\n    },\r\n    yellow: {\r\n      500: \"#F7DD43\",\r\n      600: \"#BBA317\",\r\n    },\r\n    red: {\r\n      500: \"#DB4437\",\r\n    },\r\n    white: \"#FFFFFF\",\r\n\r\n    indigo: {\r\n      950: \"#16172E\",\r\n      900: \"#1B1C35\",\r\n      800: \"#17182e\",\r\n      50: \"#F4F6FF\",\r\n    },\r\n    // violet: {\r\n    //   900: \"#3B2281\",\r\n    //   200: \"#7577AF\",\r\n    // },\r\n  },\r\n  // fonts: {\r\n  //   heading: \"Roboto_700Bold\",\r\n  //   body: \"Roboto_400Regular\",\r\n  //   medium: \"Roboto_500Medium\",\r\n  // },\r\n  // fontSizes: {\r\n  //   xs: 12,\r\n  //   sm: 14,\r\n  //   md: 16,\r\n  //   lg: 20,\r\n  //   xl: 24,\r\n  // },\r\n  // sizes: {\r\n  //   14: 56,\r\n  //   22: 87,\r\n  // },\r\n\r\n  components: {\r\n    Text: {\r\n      baseStyle: {\r\n        color: \"white\",\r\n      },\r\n    },\r\n    Heading: {\r\n      baseStyle: {\r\n        color: \"white\",\r\n      },\r\n    },\r\n    // Button: {\r\n    //   baseStyle: {\r\n    //     bgColor: \"violet.200\",\r\n    //   },\r\n    // },\r\n    Divider: {\r\n      baseStyle: {\r\n        bgColor: \"violet.900\",\r\n      },\r\n    },\r\n    Input: {\r\n      baseStyle: {\r\n        color: \"white\",\r\n      },\r\n      variants: {\r\n        filled: {\r\n          bgColor: \"indigo.900\",\r\n        },\r\n      },\r\n      defaultProps: {\r\n        borderColor: \"rgba(255,255,255, .1)\",\r\n        placeholderTextColor: \"rgba(255,255,255, .4)\",\r\n        _focus: {\r\n          borderColor: \"violet.900\",\r\n        },\r\n      },\r\n    },\r\n    TextArea: {\r\n      baseStyle: {\r\n        color: \"white\",\r\n      },\r\n      variants: {\r\n        filled: {\r\n          bgColor: \"indigo.900\",\r\n        },\r\n      },\r\n      defaultProps: {\r\n        borderColor: \"rgba(255,255,255, .1)\",\r\n        placeholderTextColor: \"rgba(255,255,255, .4)\",\r\n        _focus: {\r\n          borderColor: \"violet.900\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { StatusBar as NBStatusBar, useTheme } from \"native-base\";\r\n\r\nexport function StatusBar() {\r\n  const { colors } = useTheme();\r\n\r\n  return (\r\n    <NBStatusBar\r\n      barStyle=\"light-content\"\r\n      backgroundColor={colors.violet[900]}\r\n      // translucent\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { NativeBaseProvider } from \"native-base\";\r\nimport { AuthContextProvider } from \"~/contexts/AuthContext\";\r\nimport { Routes } from \"~/routes\";\r\nimport \"react-native-gesture-handler\";\r\n// import \"~/configs/ReactotronConfig\";\r\nimport { THEME } from \"~/styles/theme\";\r\nimport { StatusBar } from \"~/components/StatusBar\";\r\nimport { registerRootComponent } from \"expo\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport default function App() {\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n      <NativeBaseProvider theme={THEME}>\r\n        <StatusBar />\r\n        <AuthContextProvider>\r\n          <Routes />\r\n        </AuthContextProvider>\r\n      </NativeBaseProvider>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}